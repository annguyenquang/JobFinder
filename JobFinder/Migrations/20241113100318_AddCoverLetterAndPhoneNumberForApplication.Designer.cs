// <auto-generated />
using System;
using JobFinder.DataAccess.Persistent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobFinder.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241113100318_AddCoverLetterAndPhoneNumberForApplication")]
    partial class AddCoverLetterAndPhoneNumberForApplication
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobFinder.Core.Entity.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CommitmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<Guid?>("EducationLevelRequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GenderRequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MaxAgeRequirement")
                        .HasColumnType("int");

                    b.Property<int?>("MinAgeRequirement")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WorkArrangementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WorkExperienceRequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommitmentTypeId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EducationLevelRequirementId");

                    b.HasIndex("GenderRequirementId");

                    b.HasIndex("WorkArrangementId");

                    b.HasIndex("WorkExperienceRequirementId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c695d62-51f0-4070-a625-c030208dffb7"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3502),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3527),
                            Description = "Develop and maintain web applications.",
                            DistrictId = 10,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 21,
                            ProvinceId = 1,
                            Salary = 80000.0,
                            Skills = "[\"C#\",\".NET\",\"Machine Learning\",\"Network\",\"Hardware\",\"Marketing\"]",
                            Status = 1,
                            Title = "Software Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3527),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("5540bd1d-b228-410e-8fbf-0842aeda7cb1"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3530),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3535),
                            Description = "Analyze large datasets to generate business insights.",
                            DistrictId = 15,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 40,
                            MinAgeRequirement = 23,
                            ProvinceId = 2,
                            Salary = 60000.0,
                            Skills = "[\"C#\",\".NET\",\"Machine Learning\",\"Network\",\"Hardware\",\"Marketing\"]",
                            Status = 1,
                            Title = "Data Analyst",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3536),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("571827fa-78f4-4192-ad3b-06bb014309c2"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3539),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3544),
                            Description = "Oversee product development lifecycle.",
                            DistrictId = 20,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 28,
                            ProvinceId = 3,
                            Salary = 95000.0,
                            Status = 1,
                            Title = "Product Manager",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3544),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("646ccd9f-aa2f-413e-8d3e-eb8ab0b14c96")
                        },
                        new
                        {
                            Id = new Guid("ca01ec6a-8d39-4e00-ab98-6c3f9a2e0b1e"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3546),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3550),
                            Description = "Design intuitive user interfaces.",
                            DistrictId = 25,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 38,
                            MinAgeRequirement = 24,
                            ProvinceId = 4,
                            Salary = 70000.0,
                            Status = 1,
                            Title = "UX Designer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3551),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("c3d3aa6b-ac70-4aa9-a8c2-88b3e0581d87"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3554),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3558),
                            Description = "Develop and maintain web applications.",
                            DistrictId = 10,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 21,
                            ProvinceId = 1,
                            Salary = 80000.0,
                            Status = 1,
                            Title = "Software Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3558),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("9127e8f9-a91c-4dca-8008-3cb7a8dcfb22"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3561),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3565),
                            Description = "Analyze large datasets to generate business insights.",
                            DistrictId = 15,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 40,
                            MinAgeRequirement = 23,
                            ProvinceId = 2,
                            Salary = 60000.0,
                            Status = 1,
                            Title = "Data Analyst",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3566),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("def969c3-e7ad-4f71-9907-2c0d594d3ecb"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3568),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3572),
                            Description = "Oversee product development lifecycle.",
                            DistrictId = 20,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 28,
                            ProvinceId = 3,
                            Salary = 95000.0,
                            Status = 1,
                            Title = "Product Manager",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3572),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("646ccd9f-aa2f-413e-8d3e-eb8ab0b14c96")
                        },
                        new
                        {
                            Id = new Guid("22aadfc7-6022-4f15-ac49-13fa33f8afbe"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3576),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3580),
                            Description = "Manage and maintain network infrastructure.",
                            DistrictId = 21,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 40,
                            MinAgeRequirement = 25,
                            ProvinceId = 4,
                            Salary = 85000.0,
                            Status = 1,
                            Title = "Network Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3580),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("8845c741-6b0f-4f95-b179-3d007ba28a41"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3582),
                            CommitmentTypeId = new Guid("3fbef738-ed16-4778-8463-8390444841de"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3586),
                            Description = "Build and maintain client relationships.",
                            DistrictId = 30,
                            EducationLevelRequirementId = new Guid("ebb6a034-ce37-41a4-b1f6-c70f1698c4f2"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 23,
                            ProvinceId = 5,
                            Salary = 55000.0,
                            Status = 1,
                            Title = "Sales Executive",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3587),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("8f31d3d0-dc53-45d6-bccd-fd2d15dacb77"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3589),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3594),
                            Description = "Provide technical support to clients.",
                            DistrictId = 18,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 33,
                            MinAgeRequirement = 22,
                            ProvinceId = 6,
                            Salary = 45000.0,
                            Status = 1,
                            Title = "Customer Support Specialist",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3594),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("fbce1042-bce0-47a3-92cc-54e3b86eb570")
                        },
                        new
                        {
                            Id = new Guid("fa01ec6a-8d39-4e00-ab98-6c3f9a2e0b1f"),
                            CloseDate = new DateTime(2025, 4, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3597),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3600),
                            Description = "Develop responsive web interfaces.",
                            DistrictId = 30,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 22,
                            ProvinceId = 5,
                            Salary = 65000.0,
                            Status = 1,
                            Title = "Front-End Developer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3601),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("a6b3ec6a-1d44-4b00-aa18-7d3f1a2e2f6d"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3603),
                            CommitmentTypeId = new Guid("3fbef738-ed16-4778-8463-8390444841de"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3607),
                            Description = "Manage and troubleshoot network infrastructure.",
                            DistrictId = 35,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 40,
                            MinAgeRequirement = 25,
                            ProvinceId = 6,
                            Salary = 75000.0,
                            Status = 1,
                            Title = "Network Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3607),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203")
                        },
                        new
                        {
                            Id = new Guid("c3e8ff99-9f1a-4e4e-aaa4-4d1c8e5e3b5a"),
                            CloseDate = new DateTime(2025, 5, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3609),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3613),
                            Description = "Develop data models and predictive analytics.",
                            DistrictId = 40,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 26,
                            ProvinceId = 7,
                            Salary = 95000.0,
                            Status = 1,
                            Title = "Data Scientist",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3614),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("5f9c2d8f-a7f2-45a4-8e4a-90b8f7a03b3e"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3615),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3621),
                            Description = "Build and maintain server-side applications.",
                            DistrictId = 45,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 38,
                            MinAgeRequirement = 24,
                            ProvinceId = 8,
                            Salary = 78000.0,
                            Status = 1,
                            Title = "Backend Developer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3622),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("8c78bbac-4a5e-49ab-aafb-5a6c3f0c4b5d"),
                            CloseDate = new DateTime(2025, 6, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3672),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3677),
                            Description = "Implement machine learning models for automation.",
                            DistrictId = 50,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 50,
                            MinAgeRequirement = 27,
                            ProvinceId = 9,
                            Salary = 120000.0,
                            Status = 1,
                            Title = "Machine Learning Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3678),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("3d6b9f9b-6f2d-4b4a-b4c7-2c8b5f4e1b4e"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3680),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3684),
                            Description = "Coordinate and oversee project delivery.",
                            DistrictId = 55,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 50,
                            MinAgeRequirement = 30,
                            ProvinceId = 10,
                            Salary = 90000.0,
                            Status = 1,
                            Title = "Project Manager",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3684),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("646ccd9f-aa2f-413e-8d3e-eb8ab0b14c96")
                        },
                        new
                        {
                            Id = new Guid("4b3dff90-4d8a-4cbb-a3e8-6c7e5a4d3c4a"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3686),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3690),
                            Description = "Plan and manage content creation.",
                            DistrictId = 60,
                            EducationLevelRequirementId = new Guid("ebb6a034-ce37-41a4-b1f6-c70f1698c4f2"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 21,
                            ProvinceId = 11,
                            Salary = 55000.0,
                            Status = 1,
                            Title = "Content Strategist",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3691),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203")
                        },
                        new
                        {
                            Id = new Guid("af7bcf34-a92d-4b2b-9937-3e6b7f4f2c6d"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3695),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3727),
                            Description = "Ensure software quality through testing.",
                            DistrictId = 65,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 39,
                            MinAgeRequirement = 24,
                            ProvinceId = 12,
                            Salary = 70000.0,
                            Status = 1,
                            Title = "Quality Assurance Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3727),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("1c8a7d6b-2d7f-4c2b-a9c5-8b3e9f6f2d8b"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3732),
                            CommitmentTypeId = new Guid("26a49bd7-ad8c-40be-8e7c-dd903f7a653e"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3736),
                            Description = "Develop marketing strategies to drive growth.",
                            DistrictId = 70,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 37,
                            MinAgeRequirement = 23,
                            ProvinceId = 13,
                            Salary = 60000.0,
                            Status = 1,
                            Title = "Marketing Specialist",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3737),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("b3f9d8c7-a1f4-4e3d-b7c2-7e3f9a4f1c5d"),
                            CloseDate = new DateTime(2025, 4, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3739),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3744),
                            Description = "Analyze financial data to aid in decision-making.",
                            DistrictId = 75,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 27,
                            ProvinceId = 14,
                            Salary = 85000.0,
                            Status = 1,
                            Title = "Financial Analyst",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3744),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("dd6b2a14-0f8b-41a8-ae5d-53de0a92d764"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3746),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3751),
                            Description = "Create visual content for digital and print media.",
                            DistrictId = 80,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 22,
                            ProvinceId = 15,
                            Salary = 60000.0,
                            Status = 1,
                            Title = "Graphic Designer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3751),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("f07a1be4-bd6d-4c2d-9537-303e0c7a5dcf"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3754),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3758),
                            Description = "Implement CI/CD processes for efficient development.",
                            DistrictId = 85,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 26,
                            ProvinceId = 16,
                            Salary = 95000.0,
                            Status = 1,
                            Title = "DevOps Engineer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3759),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("17e0cd7e-5887-44e2-bf2a-cd1b1f631f76"),
                            CloseDate = new DateTime(2025, 4, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3761),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3765),
                            Description = "Design user interfaces and enhance user experience.",
                            DistrictId = 90,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 38,
                            MinAgeRequirement = 24,
                            ProvinceId = 17,
                            Salary = 70000.0,
                            Status = 1,
                            Title = "UI/UX Designer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3765),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("1d41e60a-ffb5-4039-b4b6-3e25e68d0f2c"),
                            CloseDate = new DateTime(2025, 5, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3767),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3771),
                            Description = "Protect an organization's systems from security threats.",
                            DistrictId = 95,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 27,
                            ProvinceId = 18,
                            Salary = 90000.0,
                            Status = 1,
                            Title = "Cybersecurity Analyst",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3771),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("d0d69bba-c6c0-4e1e-b8a1-9b4b44e69b93"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3774),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3778),
                            Description = "Manage and optimize database systems.",
                            DistrictId = 100,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 50,
                            MinAgeRequirement = 28,
                            ProvinceId = 19,
                            Salary = 80000.0,
                            Status = 1,
                            Title = "Database Administrator",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3779),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("1b9a3a57-5a94-4cc3-9af1-0380d074dd65"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3780),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3785),
                            Description = "Ensure network and system performance and security.",
                            DistrictId = 105,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 45,
                            MinAgeRequirement = 25,
                            ProvinceId = 20,
                            Salary = 75000.0,
                            Status = 1,
                            Title = "System Administrator",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3785),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("82cfed84-d067-4d70-bef9-f08b0636a6b0"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3787),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3792),
                            Description = "Optimize website content for search engines.",
                            DistrictId = 110,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 34,
                            MinAgeRequirement = 21,
                            ProvinceId = 21,
                            Salary = 55000.0,
                            Status = 1,
                            Title = "SEO Specialist",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3792),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203")
                        },
                        new
                        {
                            Id = new Guid("df024b07-216f-41d7-b79b-25eb8f28762d"),
                            CloseDate = new DateTime(2025, 4, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3794),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3798),
                            Description = "Analyze business processes and provide solutions.",
                            DistrictId = 115,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 44,
                            MinAgeRequirement = 26,
                            ProvinceId = 22,
                            Salary = 70000.0,
                            Status = 1,
                            Title = "Business Analyst",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3799),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        },
                        new
                        {
                            Id = new Guid("c8e2c78e-f68e-4c7e-a22f-5c81b4b5a8b0"),
                            CloseDate = new DateTime(2025, 5, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3801),
                            CommitmentTypeId = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3805),
                            Description = "Lead sales team to achieve targets.",
                            DistrictId = 120,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 50,
                            MinAgeRequirement = 28,
                            ProvinceId = 23,
                            Salary = 95000.0,
                            Status = 1,
                            Title = "Sales Manager",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3806),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7")
                        },
                        new
                        {
                            Id = new Guid("6f0e2a6f-54d7-493c-bcb4-8f5eeb2fba1b"),
                            CloseDate = new DateTime(2025, 1, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3808),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3813),
                            Description = "Assist in the development and execution of marketing campaigns.",
                            DistrictId = 125,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 36,
                            MinAgeRequirement = 23,
                            ProvinceId = 24,
                            Salary = 65000.0,
                            Status = 1,
                            Title = "Marketing Coordinator",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3813),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203")
                        },
                        new
                        {
                            Id = new Guid("3d8db2d5-5020-497e-917b-500a1f663c60"),
                            CloseDate = new DateTime(2025, 4, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3815),
                            CommitmentTypeId = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            CompanyId = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3819),
                            Description = "Oversee project planning and execution.",
                            DistrictId = 130,
                            EducationLevelRequirementId = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            GenderRequirementId = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            MaxAgeRequirement = 50,
                            MinAgeRequirement = 30,
                            ProvinceId = 25,
                            Salary = 100000.0,
                            Status = 1,
                            Title = "Project Manager",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3820),
                            WorkArrangementId = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            WorkExperienceRequirementId = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d")
                        },
                        new
                        {
                            Id = new Guid("7c7616f2-3c2c-4c5f-9f40-470e78a847c7"),
                            CloseDate = new DateTime(2025, 3, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3822),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3826),
                            Description = "Write and edit content for various platforms.",
                            DistrictId = 135,
                            EducationLevelRequirementId = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            GenderRequirementId = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            MaxAgeRequirement = 35,
                            MinAgeRequirement = 21,
                            ProvinceId = 26,
                            Salary = 50000.0,
                            Status = 1,
                            Title = "Content Writer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3826),
                            WorkArrangementId = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            WorkExperienceRequirementId = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203")
                        },
                        new
                        {
                            Id = new Guid("c0a173ff-5be0-4bc9-877b-8d632eeb6da6"),
                            CloseDate = new DateTime(2025, 2, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3829),
                            CommitmentTypeId = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            CompanyId = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            CreatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3833),
                            Description = "Build and maintain websites and web applications.",
                            DistrictId = 140,
                            EducationLevelRequirementId = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            GenderRequirementId = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            MaxAgeRequirement = 40,
                            MinAgeRequirement = 22,
                            ProvinceId = 27,
                            Salary = 75000.0,
                            Status = 1,
                            Title = "Web Developer",
                            UpdatedAt = new DateTime(2024, 11, 13, 17, 3, 17, 605, DateTimeKind.Local).AddTicks(3833),
                            WorkArrangementId = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            WorkExperienceRequirementId = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2")
                        });
                });

            modelBuilder.Entity("JobFinder.Core.Entity.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CVLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Metadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Metadatas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("540f318e-b42f-4485-9e60-8faa5bf80962"),
                            Type = 0,
                            Value = "{\"data\": \"FullTime\"}"
                        },
                        new
                        {
                            Id = new Guid("5d06c3b1-2bd1-4c68-96b4-f4cd8c899dff"),
                            Type = 0,
                            Value = "{\"data\": \"PartTime\"}"
                        },
                        new
                        {
                            Id = new Guid("3fbef738-ed16-4778-8463-8390444841de"),
                            Type = 0,
                            Value = "{\"data\": \"Internship\"}"
                        },
                        new
                        {
                            Id = new Guid("26a49bd7-ad8c-40be-8e7c-dd903f7a653e"),
                            Type = 0,
                            Value = "{\"data\": \"Freelance\"}"
                        },
                        new
                        {
                            Id = new Guid("44b668b2-09ee-499e-af95-73598f9153a2"),
                            Type = 0,
                            Value = "{\"data\": \"Contract\"}"
                        },
                        new
                        {
                            Id = new Guid("96279c48-1bfe-441d-992e-db86cb3bf315"),
                            Type = 0,
                            Value = "{\"data\": \"Daily\"}"
                        },
                        new
                        {
                            Id = new Guid("04a9de34-0869-41b2-87a8-63c20c4ba22a"),
                            Type = 1,
                            Value = "{\"data\": \"Onsite\"}"
                        },
                        new
                        {
                            Id = new Guid("376764fa-28ec-4a08-80e3-a6ab407e8601"),
                            Type = 1,
                            Value = "{\"data\": \"Remote/WFH\"}"
                        },
                        new
                        {
                            Id = new Guid("c199da74-c2fb-4381-b093-cf2f1e3e8f06"),
                            Type = 1,
                            Value = "{\"data\": \"Hybrid\"}"
                        },
                        new
                        {
                            Id = new Guid("fbce1042-bce0-47a3-92cc-54e3b86eb570"),
                            Type = 2,
                            Value = "{\"data\": \"FreshGraduate\"}"
                        },
                        new
                        {
                            Id = new Guid("4a3e2365-47f4-45d9-b1d4-326d9f2f3203"),
                            Type = 2,
                            Value = "{\"data\": \"LessThanOneYear\"}"
                        },
                        new
                        {
                            Id = new Guid("cc4121b2-72c2-4226-ad12-24e722b50cc2"),
                            Type = 2,
                            Value = "{\"data\": \"OneToThreeYears\"}"
                        },
                        new
                        {
                            Id = new Guid("67db1aef-c1b1-4424-8313-774a5dccdb9d"),
                            Type = 2,
                            Value = "{\"data\": \"ThreeToFiveYears\"}"
                        },
                        new
                        {
                            Id = new Guid("bf38a1b9-dee3-455a-87c1-4e034fe806f7"),
                            Type = 2,
                            Value = "{\"data\": \"FiveToTenYears\"}"
                        },
                        new
                        {
                            Id = new Guid("646ccd9f-aa2f-413e-8d3e-eb8ab0b14c96"),
                            Type = 2,
                            Value = "{\"data\": \"MoreThanTenYears\"}"
                        },
                        new
                        {
                            Id = new Guid("ceb115a0-3ffe-455c-b24e-9eff074e1ec1"),
                            Type = 3,
                            Value = "{\"data\": \"PrimarySchool\"}"
                        },
                        new
                        {
                            Id = new Guid("c9d2f457-06bf-40ad-9a4a-d6e201888129"),
                            Type = 3,
                            Value = "{\"data\": \"SecondarySchool\"}"
                        },
                        new
                        {
                            Id = new Guid("52e22ea6-7f97-4816-b64a-bfd4aa21cd74"),
                            Type = 3,
                            Value = "{\"data\": \"SeniorOrVocationalHighSchool\"}"
                        },
                        new
                        {
                            Id = new Guid("ebb6a034-ce37-41a4-b1f6-c70f1698c4f2"),
                            Type = 3,
                            Value = "{\"data\": \"Diploma\"}"
                        },
                        new
                        {
                            Id = new Guid("a3fb036a-04fc-4590-b87d-6ed32e2ec692"),
                            Type = 3,
                            Value = "{\"data\": \"CollegeDegree\"}"
                        },
                        new
                        {
                            Id = new Guid("bc4ecf1e-8841-47f2-86ec-b0c523f03da1"),
                            Type = 3,
                            Value = "{\"data\": \"BachelorDegree\"}"
                        },
                        new
                        {
                            Id = new Guid("bc44b9a9-5cd6-4195-a7bd-92b4bef6d8fb"),
                            Type = 3,
                            Value = "{\"data\": \"MasterDegree\"}"
                        },
                        new
                        {
                            Id = new Guid("853384de-154c-4187-bf5d-aa684b85736d"),
                            Type = 3,
                            Value = "{\"data\": \"Doctorate\"}"
                        },
                        new
                        {
                            Id = new Guid("79685cdb-be26-49cc-b7f9-1fb51686f5ba"),
                            Type = 4,
                            Value = "{\"data\": \"Male\"}"
                        },
                        new
                        {
                            Id = new Guid("7b5f69cb-5996-4a57-b9c6-9fee2a791bf6"),
                            Type = 4,
                            Value = "{\"data\": \"Female\"}"
                        },
                        new
                        {
                            Id = new Guid("12497687-64b8-4d8e-814a-b7d1d33d3aab"),
                            Type = 4,
                            Value = "{\"data\": \"Others\"}"
                        });
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Company", b =>
                {
                    b.HasBaseType("JobFinder.Core.Entity.Account");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("EmailContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeCount")
                        .HasColumnType("int");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f9b407b-80e0-4f0c-a301-5a8bbf813b05"),
                            Email = "",
                            Password = "$2a$11$hikE.93/ueqzkLgEmg/ZqecSBLDdjFFoAOst74hFbVusInqaD0Zsu",
                            Phone = "",
                            Username = "admin",
                            Address = "123 Tech Lane",
                            Description = "Tech Corp is a tech corp company.",
                            DistrictId = 0,
                            EmailContact = "info@techcorp.com",
                            EmployeeCount = 500,
                            Industry = "Technology",
                            Logo = "https://images-platform.99static.com/7v8-fjWpezqDYFTxbYGvEE3gnw8=/191x0:1338x1147/500x500/top/smart/99designs-contests-attachments/60/60612/attachment_60612660",
                            Name = "Tech Corp",
                            PhoneContact = "123456789",
                            ProvinceId = 0,
                            Slug = "tech-corp",
                            Website = "www.techcorp.com"
                        },
                        new
                        {
                            Id = new Guid("ec7d72b6-e9f4-4c85-bc12-c2db31d5efa7"),
                            Email = "",
                            Password = "$2a$11$IZZ6xdXFo09DOlqjYY.bUOcyYxuEk54S6gpROHmYnE3V9OYN43Eae",
                            Phone = "",
                            Username = "account1",
                            Address = "456 Health Blvd",
                            Description = "Health Inc. is a health corp company.",
                            DistrictId = 0,
                            EmailContact = "info@healthinc.com",
                            EmployeeCount = 300,
                            Industry = "Healthcare",
                            Logo = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRyD1QcAiMJyNvRptFkjJXovZouhRkTEMlazQ&s",
                            Name = "Health Inc.",
                            PhoneContact = "987654321",
                            ProvinceId = 0,
                            Slug = "health-inc",
                            Website = "www.healthinc.com"
                        },
                        new
                        {
                            Id = new Guid("ec6aba4a-1b55-412a-a2e7-9ec8b9f16662"),
                            Email = "",
                            Password = "$2a$11$IR24pQlXvPNndxyST6tbTumFqbv2hB65pyyJiJKEHOIID4G13neLa",
                            Phone = "",
                            Username = "account2",
                            Address = "45688 London",
                            Description = "An Inc. is a an incident company.",
                            DistrictId = 0,
                            EmailContact = "info@AnRe.com",
                            EmployeeCount = 300,
                            Industry = "IT",
                            Logo = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRsowdkWEAhFe0idqRamO_CAvGutpD1CHKpcA&s",
                            Name = "An Inc.",
                            PhoneContact = "98765432112",
                            ProvinceId = 0,
                            Slug = "an-pro-ga",
                            Website = "www.Anrp.com"
                        });
                });

            modelBuilder.Entity("JobFinder.Core.Entity.User", b =>
                {
                    b.HasBaseType("JobFinder.Core.Entity.Account");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cc554c2-c577-4a89-8cc1-90724bcbb9fb"),
                            Email = "an.nguyen@gmail.com",
                            Password = "$2a$11$FwT.00cm86tbj3/ROPWnLOFAblHj19tmtNy9S2CAc1TFqgM/YPfUO",
                            Phone = "",
                            Username = "user1",
                            DateOfBirth = new DateOnly(2003, 10, 12),
                            FirstName = "An",
                            LastName = "Nguyen"
                        });
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Job", b =>
                {
                    b.HasOne("JobFinder.Core.Entity.Metadata", "CommitmentType")
                        .WithMany("CommitmentTypeJobs")
                        .HasForeignKey("CommitmentTypeId");

                    b.HasOne("JobFinder.Core.Entity.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobFinder.Core.Entity.Metadata", "EducationLevelRequirement")
                        .WithMany("EducationLevelRequirementJobs")
                        .HasForeignKey("EducationLevelRequirementId");

                    b.HasOne("JobFinder.Core.Entity.Metadata", "GenderRequirement")
                        .WithMany("GenderRequirementJobs")
                        .HasForeignKey("GenderRequirementId");

                    b.HasOne("JobFinder.Core.Entity.Metadata", "WorkArrangement")
                        .WithMany("WorkArrangementJobs")
                        .HasForeignKey("WorkArrangementId");

                    b.HasOne("JobFinder.Core.Entity.Metadata", "WorkExperienceRequirement")
                        .WithMany("WorkExperienceRequirementJobs")
                        .HasForeignKey("WorkExperienceRequirementId");

                    b.Navigation("CommitmentType");

                    b.Navigation("Company");

                    b.Navigation("EducationLevelRequirement");

                    b.Navigation("GenderRequirement");

                    b.Navigation("WorkArrangement");

                    b.Navigation("WorkExperienceRequirement");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.JobApplication", b =>
                {
                    b.HasOne("JobFinder.Core.Entity.Job", "Job")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobFinder.Core.Entity.User", "User")
                        .WithMany("JobApplications")
                        .HasForeignKey("UserId");

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Job", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Metadata", b =>
                {
                    b.Navigation("CommitmentTypeJobs");

                    b.Navigation("EducationLevelRequirementJobs");

                    b.Navigation("GenderRequirementJobs");

                    b.Navigation("WorkArrangementJobs");

                    b.Navigation("WorkExperienceRequirementJobs");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.Company", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("JobFinder.Core.Entity.User", b =>
                {
                    b.Navigation("JobApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
